# -*- coding: utf-8 -*-
"""washington_transcription_parsing

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1qLvQcLVCyoakIGUnAPWv4Boon_G68sLV
"""

import os
from os import listdir
from PIL import Image
#!pip install jiwer
import jiwer
import pickle
from google.colab import drive
drive.mount('/content/drive')

def get_images_from_folder(folder_path):
    images = []
    for filename in listdir(folder_path):
        try:
          images.append(Image.open(os.path.join(folder_path, filename)))
        except:
          print(filename)
    return images

def process_transcription(transcription):
    labels = []
    lines = []
    for line in transcription[:-1].split('\n'):
        label, sentence = line.split(' ')
        lines.append(sentence)
        labels.append(label)
    return labels, lines

def get_symbols(transcription):
  labels, lines = process_transcription(transcription)
  symbols = {}
  for i in range(len(lines)):
    for sep_words in lines[i].split('|'):
      for letter in sep_words.split('-'):
        if len(letter) != 1:
          if letter not in symbols:
            symbols[letter] = [(i, labels[i])]
          else:
            symbols[letter].append((i, labels[i]))
  return symbols

def stringify_word(sep_word):
    transcribed_chars = []
    chars = sep_word.split('-')
    for char in chars:
      if len(char) > 1:
        # char is special symbol, needs translation
        transcribed_chars.append(symbol_dict[char])
      else:
        transcribed_chars.append(char)
    return ''.join(transcribed_chars)

def stringify_line(line):
  words = []
  for sep_word in line.split('|'):
    words.append(stringify_word(sep_word))
  return ' '.join(words)

def get_images_from_folder(folder_path):
    images = []
    for filename in sorted(listdir(folder_path)):
      try:
        images.append(Image.open(os.path.join(folder_path, filename)))
      except:
        print(filename)
    return images

import string
alphabet = list(string.ascii_letters)
numerals = {'s_' + str(i) :str(i) for i in [0,1,2,3,4,5,6,7,8,9]}
ordinals = {
    's_0th': '0th',
    's_1st': '1st',
    's_2nd': '2nd',
    's_3rd': '3rd',
    's_4th': '4th',
    's_5th': '5th',
    's_6th': '6th',
    's_7th': '7th',
    's_8th': '8th',
    's_9th': '9th',
}
punctuation = {
    's_cm': ',',
    's_qo': ':',
    's_bl': '(',
    's_br': ')',
    's_pt': '.',
    's_mi': '-',
    's_qt': "'",
    's_sq': ';',
}
shorthand = {
    # don't have modern equivalents as far as I know
    's_1th': '1th',
    's_GW' : 'GW',
    's_et' : '&',
    's_lb' : '',
    's_s'  : 's',
    's_sl' : '|'
}
symbol_dict = numerals | ordinals | punctuation | shorthand

with open('/content/drive/MyDrive/washingtondb-v1.0/ground_truth/transcription.txt', 'r') as f:
  washington_transcription = f.read()

labels, lines = process_transcription(washington_transcription)

with open('/content/drive/MyDrive/washingtondb-v1.0/ground_truth/word_labels.txt', 'r') as f:
  washington_word_labels = f.read()

line_images_normalized = get_images_from_folder('/content/drive/MyDrive/washingtondb-v1.0/data/line_images_normalized')

symbols = get_symbols(washington_transcription)

symbol = 's_lb'
index = 0
to_check = symbols[symbol][index][0]

print(lines[to_check])
line_images_normalized[to_check]

transcribed_lines = []
for line in lines:
  transcribed_lines.append(stringify_line(line))

labeled_transcribed_lines = []
for i in range(len(labels)):
  labeled_transcribed_lines.append((labels[i] + " " + transcribed_lines[i]))

word_labels, words = process_transcription(washington_word_labels)
transcribed_words = []
for word in words:
  transcribed_words.append(stringify_word(word))
labeled_transcribed_words = []
for i in range(len(word_labels)):
  labeled_transcribed_words.append((word_labels[i] + " " + transcribed_words[i]))
